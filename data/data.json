[
    {"question": "C# nedir?", "answer": "C# Microsoft tarafından geliştirilen, nesne yönelimli bir programlama dilidir."},
    {"question": ".NET nedir?", "answer": ".NET, Microsoft tarafından geliştirilen bir yazılım geliştirme platformudur."},
    {"question": ".NET Core nedir?", "answer": ".NET Core, .NET'in açık kaynak, platformlar arası çalışan hafif bir versiyonudur."},
    {"question": "MVC nedir?", "answer": "MVC, Model-View-Controller tasarım desenidir."},
    {"question": "MVC'nin açılımı nedir?", "answer": "Model-View-Controller."},
    {"question": "C# dilinde değişken nasıl tanımlanır?", "answer": "C# dilinde değişken 'int x = 5;' gibi tanımlanır."},
    {"question": "C#'ta sınıf nasıl tanımlanır?", "answer": "'class' anahtar kelimesi ile tanımlanır."},
    {"question": ".NET platformunda kullanılan diller nelerdir?", "answer": "C#, F#, VB.NET gibi dillerdir."},
    {"question": ".NET ile web uygulaması geliştirilir mi?", "answer": "Evet, ASP.NET ile web uygulamaları geliştirilebilir."},
    {"question": "ASP.NET nedir?", "answer": "ASP.NET, .NET platformu üzerinde çalışan bir web uygulama geliştirme frameworküdür."},
    {"question": "View nedir?", "answer": "View, kullanıcıya gösterilen arayüzü temsil eder."},
    {"question": "Controller nedir?", "answer": "Controller, kullanıcıdan gelen istekleri işler ve uygun cevabı View'a iletir."},
    {"question": "Model nedir?", "answer": "Model, verileri ve iş mantığını temsil eder."},
    {"question": ".NET Framework ile .NET Core farkı nedir?", "answer": ".NET Core platformlar arasıdır, .NET Framework yalnızca Windows'ta çalışır."},
    {"question": "Entity Framework nedir?", "answer": "Entity Framework, veri tabanı işlemleri için kullanılan bir ORM aracıdır."},
    {"question": "C#'ta interface nedir?", "answer": "Interface, sadece imzaları içeren, uygulanması gereken yapıdır."},
    {"question": "C# ile konsol uygulaması nasıl başlatılır?", "answer": "'Main' metoduyla başlatılır."},
    {"question": "C#'ta dizi nasıl tanımlanır?", "answer": "int[] numbers = new int[5]; gibi tanımlanır."},
    {"question": ".NET Core hangi işletim sistemlerinde çalışır?", "answer": "Windows, macOS ve Linux üzerinde çalışır."},
    {"question": "C#'ta try-catch bloğu ne işe yarar?", "answer": "Hataları yakalamak ve yönetmek için kullanılır."},
    {"question": "ASP.NET Core nedir?", "answer": ".NET Core üzerinde çalışan web framework'tür."},
    {"question": "Dependency Injection nedir?", "answer": "Sınıflar arası bağımlılıkların dışarıdan sağlanmasıdır."},
    {"question": "Routing nedir?", "answer": "Kullanıcının yaptığı isteği doğru Controller ve action'a yönlendirmedir."},
    {"question": "Razor Pages nedir?", "answer": "ASP.NET Core'da kullanılan sayfa tabanlı web uygulama modelidir."},
    {"question": "Middleware nedir?", "answer": "HTTP isteği ile yanıtı arasında çalışan bileşenlerdir."},
    {"question": "Session nedir?", "answer": "Kullanıcıya özel verilerin sunucu tarafında tutulduğu yapıdır."},
    {"question": "ViewBag nedir?", "answer": "View'a veri taşımak için kullanılan dinamik yapıdır."},
    {"question": "ViewData nedir?", "answer": "Controller'dan View'a veri göndermek için kullanılan sözlük yapısıdır."},
    {"question": "TempData nedir?", "answer": "İki istek arasında veri taşımak için kullanılır."},
    {"question": "Layout.cshtml dosyası ne işe yarar?", "answer": "Tüm sayfalarda ortak kullanılacak yapıyı içerir."},
    {"question": "PartialView nedir?", "answer": "Sayfa içinde tekrar kullanılabilir alt View'lerdir."},
    {"question": "C#'ta foreach döngüsü nasıl kullanılır?", "answer": "foreach (var item in list) { } şeklinde kullanılır."},
    {"question": "Model binding nedir?", "answer": "Kullanıcının formdan gönderdiği verileri modele otomatik eşlemektir."},
    {"question": "LINQ nedir?", "answer": "Veri kaynakları üzerinde sorgu yazmak için kullanılan yapıdır."},
    {"question": "C#'ta nullable type nedir?", "answer": "? operatörü ile tanımlanan, boş değer alabilen türlerdir."},
    {"question": "IActionResult nedir?", "answer": "Controller metodlarının dönüş türüdür, farklı yanıt türlerini dönebilir."},
    {"question": "ViewComponent nedir?", "answer": "Sayfada tekrar kullanılabilen bileşenlerdir, PartialView'dan gelişmiştir."},
    {"question": "TagHelper nedir?", "answer": "HTML etiketlerine işlev kazandırmak için kullanılan yardımcı yapılardır."},
    {"question": "Startup.cs dosyası ne işe yarar?", "answer": "Uygulamanın başlangıç yapılandırmasını içerir."},
    {"question": "ConfigureServices metodu nedir?", "answer": "Servislerin eklendiği metottur."},
    {"question": "Configure metodu nedir?", "answer": "Middleware yapılandırmasının yapıldığı metottur."},
    {"question": "appsettings.json ne işe yarar?", "answer": "Uygulama yapılandırmalarının saklandığı dosyadır."},
    {"question": "Logging nedir?", "answer": "Uygulama içi olayların kaydedilmesidir."},
    {"question": "ModelState nedir?", "answer": "Model verilerinin doğrulamasını kontrol eden yapıdır."},
    {"question": "DataAnnotations nedir?", "answer": "Model doğrulama kuralları tanımlamak için kullanılır."},
    {"question": "C#'ta async/await nedir?", "answer": "Asenkron işlemler yapmak için kullanılan yapılardır."},
    {"question": "C#'ta static class nedir?", "answer": "Nesne oluşturmadan kullanılabilen sınıflardır."},
    {"question": "C#'ta inheritance (kalıtım) nasıl kullanılır?", "answer": "Bir sınıf, başka bir sınıfı ':' operatörü ile miras alır."},
    {"question": "C#'ta override ne işe yarar?", "answer": "Türetilmiş sınıfta, temel sınıftaki metodu yeniden tanımlamayı sağlar."}
]
